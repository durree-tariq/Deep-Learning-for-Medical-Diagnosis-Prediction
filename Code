import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report
from sklearn.datasets import make_classification

X, y = make_classification(n_samples=100, n_features=3, n_informative=3, n_redundant=0, random_state=42)

# Create a DataFrame for better visualization
tuberculosis_data = pd.DataFrame(X, columns=['Cough', 'Fever', 'Weight_Loss'])
tuberculosis_data['Has_Tuberculosis'] = y

# Display the first few samples of the dataset
print("First few samples of the tuberculosis diagnosis dataset:")
print(tuberculosis_data.head())

# Assuming 'Has_Tuberculosis' is the target variable and other columns are features
X = tuberculosis_data.drop('Has_Tuberculosis', axis=1)
y = tuberculosis_data['Has_Tuberculosis']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create an SVM classifier
svm_classifier = SVC(kernel='linear', C=1.0)  # You can adjust the kernel and other parameters

# Train the SVM classifier
svm_classifier.fit(X_train, y_train)

# Make predictions on the test set
y_pred = svm_classifier.predict(X_test)

# Evaluate the performance of the SVM
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"\nAccuracy: {accuracy * 100:.2f}%")
print("Classification Report:")
print(report)
